///////////////////////////////////////////////////////////////////////////
// INCLUDES 
///////////////////////////////////////////////////////////////////////////

#include "IndexMgr.hpp"

#ifdef TARGET_XBOX
#   include "xbox_private.hpp"
#endif

//==============================================================================
//==============================================================================
//==============================================================================
//  XBOX Index Memory Manager
//==============================================================================
//==============================================================================
//==============================================================================



//==============================================================================

index_factory::handle index_factory::Create( u32 nBytes, u32 Format, void* pBytes )
{	//
    //  Allocates header
    //
    handle Handle = new buffer;
    ASSERT( Handle );
    XGSetIndexBufferHeader( 0,0,D3DFORMAT(0),0,Handle,0 );
    //
    //  Allocate index buffer
    //
    u8* pIndex = (u8*)x_malloc( nBytes );
    ASSERT( pIndex );
    //
    //  Register and return
    //
    Handle->Data  = DWORD( pIndex );
    Handle->m_Len = nBytes;
    Handle->m_Ptr = pIndex;
    //
    //  Return handle
    //
    if( pBytes )
    {
        x_memcpy( pIndex,pBytes,nBytes );
    }
    return Handle;
}

//=========================================================================

void index_factory::buffer::Init( )
{
    m_Lock = 0;
    m_Len  = 0;
    m_Ptr  = 0;
}

//=========================================================================

void index_factory::buffer::Kill( )
{
	BlockUntilNotBusy( );
    x_free( m_Ptr );
    Init( );
}

//=========================================================================

void* index_factory::buffer::Lock( )
{
    m_Lock++;
    return m_Ptr;
}

//=========================================================================

void index_factory::buffer::Unlock( )
{
    ASSERT( m_Lock>0 );
    m_Lock--;
}



//==============================================================================
//==============================================================================
//==============================================================================
//  XBOX Index Memory Manager singleton
//==============================================================================
//==============================================================================
//==============================================================================



//==============================================================================

index_factory* singleton_t< index_factory >::me = NULL;

//=========================================================================

void singleton_t< index_factory >::Activate( )
{
    if( !me )
         me=new index_factory;
}

//=========================================================================

void singleton_t< index_factory >::Release( )
{
    if( me )
        return;
    delete me;
    me=NULL;
}

//=========================================================================

index_factory::index_factory( )
{
}

//=========================================================================

index_factory::~index_factory( )
{
}
